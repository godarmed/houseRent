<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.leo.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.team.leo.entity.Users">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="ISADMIN" jdbcType="INTEGER" property="isadmin" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, NAME, PASSWORD, age, TELEPHONE, ISADMIN
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllUsers" resultType="com.team.leo.entity.Users">
    select
    <include refid="Base_Column_List" />
    from users
  </select>
  <select id="selectUsers" parameterType="com.team.leo.util.UsersParams" resultType="com.team.leo.entity.Users">
    select
    <include refid="Base_Column_List" />
    from users
    where 1 = 1
    <if test="name != null">
      and NAME like concat('%',#{name},'%')
    </if>
    <if test="startAge != null">
      and age &gt; #{startAge}
    </if>
    <if test="endAge != null">
      and age &lt; #{endAge}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.team.leo.entity.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByExample" parameterType="com.team.leo.entity.UsersExample" resultType="java.lang.Integer">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="List">
    delete from users
    where ID in
    <foreach collection="list" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.team.leo.entity.Users">
    insert into users (ID, NAME, PASSWORD,
      age, TELEPHONE, ISADMIN
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{age,jdbcType=INTEGER}, #{telephone,jdbcType=VARCHAR}, #{isadmin,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.team.leo.entity.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="telephone != null">
        TELEPHONE,
      </if>
      <if test="isadmin != null">
        ISADMIN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="isadmin != null">
        #{isadmin,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.leo.entity.Users">
    update users
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        TELEPHONE = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="isadmin != null">
        ISADMIN = #{isadmin,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.leo.entity.Users">
    update users
    set NAME = #{name,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      TELEPHONE = #{telephone,jdbcType=VARCHAR},
      ISADMIN = #{isadmin,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>