<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.leo.mapper.StreetMapper">
  <resultMap id="BaseResultMap" type="com.team.leo.entity.Street">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="DISTRICT_ID" jdbcType="INTEGER" property="districtId" />
    <association property="district" javaType="District">
      <id column="id2" jdbcType="INTEGER" property="id" />
      <result column="name2" jdbcType="VARCHAR" property="name" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    s.id, s.name, s.district_id, d.id as id2, d.name as name2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from street s
    LEFT JOIN district d
    on s.district_id = d.id
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllStreet" parameterType="com.team.leo.util.StreetParams" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from street s
    LEFT JOIN district d
    on s.district_id = d.id
    where 1 = 1
    <if test="name != null">
      and d.NAME like concat('%',#{name},'%')
    </if>
    <if test="districtId != null">
      and s.DISTRICT_ID = #{districtId}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="List">
    delete from street
    where ID in
    <foreach collection="list" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.team.leo.entity.Street">
    insert into street (ID, NAME, DISTRICT_ID
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{districtId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.team.leo.entity.Street">
    insert into street
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="districtId != null">
        DISTRICT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="districtId != null">
        #{districtId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.leo.entity.Street">
    update street
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="districtId != null">
        DISTRICT_ID = #{districtId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.leo.entity.Street">
    update street
    set NAME = #{name,jdbcType=VARCHAR},
      DISTRICT_ID = #{districtId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>